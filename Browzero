#!/usr/bin/env python3

import os
import sys
import re
import shutil
from PyQt5.QtCore import QUrl, QRect, QPoint, QSize, QByteArray, Qt, QSettings
from PyQt5.QtWidgets import QApplication, QMainWindow, QMenu, QAction
from PyQt5.QtWebEngineWidgets import QWebEngineView
from PyQt5.QtWebEngineCore import QWebEngineUrlRequestInterceptor, QWebEngineUrlRequestInfo


class NetworkInterceptor(QWebEngineUrlRequestInterceptor):
    ALLOWED_NETWORKS = [
        ("ZeroNet", r"(http|ws)://127\.0\.0\.1:43110/.*"),
        ("Yggdrasil", r"http://\[.*:.*:.*:.*:.*:.*:.*:.*\].*"),
        ("IPFS", r"http://.*\.(ipfs|ipns)\.localhost:8080/.*"),
        ("Tor", r"https?://.*\.onion.*"),
        ("Lokinet", r"http://.*\.loki/.*"),
    ]

    def interceptRequest(self, info: QWebEngineUrlRequestInfo):
        url = info.requestUrl().toString()
        if not self.verify_url(url):
            info.block(True)

    def verify_url(self, url):
        url_patterns = [network[1] for network in self.ALLOWED_NETWORKS]
        pattern = "|".join(url_patterns)
        return bool(re.match(pattern, url))


class Browzero(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("Browzero")

        # Load last saved geometry from QSettings
        settings = QSettings("Browzero", "Browzero")
        last_geometry = settings.value("geometry", QByteArray())
        if not last_geometry.isEmpty():
            self.restoreGeometry(last_geometry)
        else:
            screen_resolution = QApplication.desktop().screenGeometry()
            width, height = screen_resolution.width(), screen_resolution.height()
            self.setGeometry(0, 0, width, height)

        self.view = QWebEngineView()
        self.view.loadFinished.connect(self.handle_load_finished)

        self.setCentralWidget(self.view)

        # Add network interceptor
        self.interceptor = NetworkInterceptor()
        self.view.page().setUrlRequestInterceptor(self.interceptor)

        # Add context menu
        self.context_menu = QMenu(self)
        self.back_action = QAction("Back", self)
        self.back_action.triggered.connect(self.view.back)
        self.context_menu.addAction(self.back_action)
        self.forward_action = QAction("Forward", self)
        self.forward_action.triggered.connect(self.view.forward)
        self.context_menu.addAction(self.forward_action)
        self.home_action = QAction("Home", self)
        self.home_action.triggered.connect(self.go_home)
        self.context_menu.addAction(self.home_action)
        self.clear_data_action = QAction("Clear All Data", self)
        self.clear_data_action.triggered.connect(self.clear_all_data)
        self.context_menu.addAction(self.clear_data_action)
        self.view.setContextMenuPolicy(Qt.CustomContextMenu)
        self.view.customContextMenuRequested.connect(self.show_context_menu)

    def handle_load_finished(self):
        url = self.view.url().toString()
        if self.interceptor.verify_url(url):
            # Save current window geometry to QSettings
            settings = QSettings("Browzero", "Browzero")
            settings.setValue("geometry", self.saveGeometry())

    def keyPressEvent(self, event):
        if event.key() == Qt.Key_F11:
            if self.isFullScreen():
                self.showNormal()
            else:
                self.showFullScreen()
        else:
            super().keyPressEvent(event)

    def show_context_menu(self, pos):
        self.context_menu.exec_(self.view.mapToGlobal(pos))

    def go_home(self):
        self.view.load(QUrl("http://127.0.0.1:43110/"))

    def clear_all_data(self):
        # Clear all browsing data
        self.view.page().profile().clearAllVisitedLinks()
        self.view.page().profile().clearHttpCache()
        self.view.page().profile().cookieStore().deleteAllCookies()
        self.clear_local_storage()  # New method to clear local storage

    def clear_local_storage(self):
        # Clear local storage by navigating to a blank page
        self.view.load(QUrl("about:blank"))
        self.view.page().profile().clearAllVisitedLinks()
        self.view.page().profile().clearAllStorageAccess()
        self.view.page().profile().clearHttpCache()
        self.view.page().profile().cookieStore().deleteAllCookies()


def main():
    app = QApplication(sys.argv)
    window = Browzero()

    # Load last saved site from QSettings
    settings = QSettings("Browzero", "Browzero")
    last_site = settings.value("last_site", "http://127.0.0.1:43110/")
    window.view.load(QUrl(last_site))

    window.showFullScreen()

    # Center window vertically
    screen_resolution = QApplication.desktop().screenGeometry()
    width, height = screen_resolution.width(), screen_resolution.height()
    x = int((width - window.width()) / 2)
    y = int((height - window.height()) / 2)
    window.move(x, y)

    sys.exit(app.exec_())


if __name__ == "__main__":
    main()